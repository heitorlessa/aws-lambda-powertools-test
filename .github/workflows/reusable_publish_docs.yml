name: Reusable publish documentation

env:
  BRANCH: develop
  ORIGIN: awslabs/aws-lambda-powertools-python

on:
  workflow_call:
    inputs:
      version:
        description: "Version to build and publish docs (1.28.0, develop)"
        required: true
        type: string
      alias:
        description: "Alias to associate version (latest, stage)"
        required: true
        type: string
      detached_mode:
        description: "Whether it's running in git detached mode to ensure git is sync'd"
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  pages: write

jobs:
  publish_docs:
    # Force Github action to run only a single job at a time (based on the group name)
    # This is to prevent "race-condition" in publishing a new version of doc to `gh-pages`
    concurrency:
      group: on-docs-rebuild
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install poetry
        run: pipx install poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "poetry"
      - name: Install dependencies
        run: make dev
      - name: Git client setup
        run: |
          git config --global user.name Docs deploy
          git config --global user.email aws-devax-open-source@amazon.com
      - name: Git refresh tip (detached mode)
        # Git Detached mode (release notes) doesn't have origin
        if: ${{ inputs.detached_mode }}
        run: |
          git config pull.rebase true
          git config remote.origin.url >&- || git remote add origin https://github.com/"$ORIGIN"
          git pull origin "$BRANCH"
      - name: Build docs website and API reference
        env:
          VERSION: ${{ inputs.version }}
          ALIAS: ${{ inputs.alias }}
        run: |
          make release-docs VERSION="$VERSION" ALIAS="$ALIAS"
          poetry run mike set-default --push latest

      - name: Release API docs
        uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847 # v3.9.3
        env:
          VERSION: ${{ inputs.version }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./api
          keep_files: true
          destination_dir: ${{ env.VERSION }}/api
      - name: Release API docs to latest
        if: ${{ inputs.alias == 'latest' }}
        uses: peaceiris/actions-gh-pages@373f7f263a76c20808c831209c920827a82a2847 # v3.9.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./api
          keep_files: true
          destination_dir: latest/api
